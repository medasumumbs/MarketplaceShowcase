server:
    port: 8081
paymentsService:
    fullUrl: http://localhost:8080
spring:
    codec:
        max-in-memory-size: 10MB
    r2dbc:
        url: r2dbc:postgresql://localhost:5432/mydatabase?currentSchema=marketplace
        username: myuser
        password: secret
        pool:
            enabled: true                               # Включение пула соединений
            initial-size: 10                            # Начальное количество соединений в пуле
            max-size: 50                                # Максимальное количество соединений
            max-idle-time: 30s                          # Время бездействия соединения перед закрытием
            max-life-time: 10m                          # Максимальное время жизни соединения
            validation-query: SELECT 1                  # SQL-запрос для проверки работоспособности соединения
    sql:
        init:
            mode: always
    application:
        name: marketplaceApplication

    jpa:
        show-sql: true
        hibernate:
            ddl-auto: validate
        properties:
            hibernate:
                format_sql: true
    liquibase:
        change-log: classpath:/liquibase/db.changelog-master.xml
        parameters:
          app.schema-name: marketplace
        clear-checksums: false
    thymeleaf:
        prefix: classpath:/templates/
        suffix: .html
        enabled: true
        cache: false # Отключите кэширование для разработки
        reactive:
            max-chunk-size: 1024 # Максимальный размер чанка для реактивного рендеринга
        encoding: UTF-8
        servlet:
            content-type: text/html;charset=UTF-8
    webflux:
        multipart:
            headers-charset: UTF-8
            max-in-memory-size: 20000KB

    servlet:
      multipart:
          max-request-size: 10MB
          max-file-size: 1MB

    data:
        redis:
            host: localhost
            port: 6379
            timeout: 5

logging:
    level:
        sql: debug
        org:
            springframework:
                jdbc:
                    support:
                        JdbcTransactionManager: debug
